name: Docker Publish

on:
  push:
    branches: [ "master" ]

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.version }}
      imageName: ${{ steps.versioning.outputs.imageName }}

    steps:
      - uses: actions/checkout@v4
      - name: Compute versions
        id: versioning
        run: |
          version=$(git rev-parse --short HEAD)
          # Convert repository name to lowercase
          repository_lowercase=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          imageName=ghcr.io/${repository_lowercase}:$version
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "imageName=$imageName" >> $GITHUB_OUTPUT
          echo "the image name :'$imageName'"
          echo "## ðŸ”– New version '$version'" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“¦ Image '$imageName'" >> $GITHUB_STEP_SUMMARY

  build-image: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: [versioning]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login 
      run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

    - name: Build Docker Image
      run: docker build ${{needs.versioning.outputs.imageName}} .


  api-tests:
    runs-on: ubuntu-latest
    needs: [versioning, build-image]
    
    steps:
    - name: Run Docker
      run: docker run -d -p 8001:8001 ${{needs.versioning.outputs.imageName}} .
      id: docker-container

    # Wait a few seconds for the image to start
    - name: Wait for image to start
      run: sleep 30
    
    # Run the API tests against the running Docker container
    - name: Run API tests
      run: |
        echo "## ðŸ§ª Running API tests" >> $GITHUB_STEP_SUMMARY
        python  ./api/tests/test_api.py

    # Cleanup: Stop and remove the Docker container
    - name: Stop and remove Docker container
      run: |
        docker stop ${{ steps.docker-container.outputs.id }}
        docker rm ${{ steps.docker-container.outputs.id }}

  push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: [versioning, build-image, api-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Login 
      run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

    - name: Push Docker Image
      run: ${{needs.versioning.outputs.imageName}}
  
  # build-and-push:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   needs: [versioning]
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Login 
  #     run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

  #   - name: Build and Push Docker Image
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: .
  #       push: true
  #       tags: ${{needs.versioning.outputs.imageName}}
  #     # build-args: |
  #     #   #   VERSION=${{needs.versioning.outputs.version}}
  #     #   # context: .
  #     #   push: true
  #     #   tags: ${{needs.versioning.outputs.imageName}}

name: Docker Publish

on:
  push:
    branches: [ "master" ]

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.version }}
      imageName: ${{ steps.versioning.outputs.imageName }}

    steps:
      - uses: actions/checkout@v4
      - name: Compute versions
        id: versioning
        run: |
          version=$(git rev-parse --short HEAD)
          # Convert repository name to lowercase
          repository_lowercase=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          imageName=ghcr.io/${repository_lowercase}:$version
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "imageName=$imageName" >> $GITHUB_OUTPUT
          echo "the image name :'$imageName'"
          echo "## ðŸ”– New version '$version'" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“¦ Image '$imageName'" >> $GITHUB_STEP_SUMMARY

  # Thanks https://docs.docker.com/build/ci/github-actions/test-before-push/
  build-test-image: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: [versioning]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login 
      run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

    - name: Build Docker Image and Export to Docker
      uses: docker/build-push-action@v5
      with: 
        context: .
        load: true
        tags: ${{needs.versioning.outputs.imageName}}

    - name: Run Docker Image and API Tests
      run: |
        docker run --rm -p 8001:8001 ${{needs.versioning.outputs.imageName}} python ./api/tests/test_api.py
        
  push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: [versioning, build-test-image]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Login 
      run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{needs.versioning.outputs.imageName}}
 